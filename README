slack acts like a package manager for your local copy of slackbuilds.
(usually obtained from http://slackbuilds.org/)

It supports following functions/options:

1)  search the repository (-s)
2)  info about specified package (-i)
3)  readme about specified package (-r)
4)  goto the package directory (-g)
5)  view slackbuild (-v)
6)  list files contained in specified package directory (-l)
7)  description about specified package (-d)
8)  get/download the package (-G)
9)  build the package (-B)
10) install the built package (-I)
11) upgrade installed package with built package (-U)
12) remove installed package (-R)
13) query installed packages (-q)
14) view all packages installed from the slackbuilds repo (-a)
15) update the local git repo of slackbuilds (-u)

It uses the following (Slackware) tools:

1) installpkg
2) removepkg
3) upgradepkg

The variables used are:

1) repodir=""
 # Repository for slackbuilds.

2) srcpath=""
 # Where the downloaded source packages are to be placed.
 # Leave it blank for saving it in the same directory as the slackbuild.

3) outdir=""
 # Where the build package will be placed. 
 # Leave it blank for putting it in /tmp.

4) gitdir=""
 # Directory where the slackbuilds git repository is present.

Samples for these variables are present in the script itself.

These can be overrided by specifying the options provided in the configuration file "/etc/slack/slack.conf".

Installation:
(as root)
make install

Usage:
slack <option> [package]

Examples:
slack -s dosbox (search for package dosbox)
slack -i dosbox (read the info file for dosbox)
slack -v dosbox (view slackbuild)
slack -G dosbox (get(download) dosbox(source))
slack -B dosbox (build package for dosbox)
slack -I dosbox (install built package)
slack -a (list all packages installed from the slackbuilds repository)

Note:
1) When searching, a *(wildcard) at both ends is implied.

For example, if one wants to search for all packages which have the word "xfce", one can use-
slack search xfce

Instead of-
slack search '*xfce*'

2) When querying, if the package(s) is/are installed, they will they displayed,
else no output. A *(wildcard) at both ends is also implied when querying.

3) Suppose that you want to install a built package virtualbox-kernel, and you get an error like: 

Upgrading virtualbox-kernel
/usr/bin/slack: line 135: [: /home/aaditya/packages/virtualbox-kernel-4.3.4_3.10.17-x86_64-1_SBo.tgz: binary operator expected
N/A

This could be because there are 2 packages virtualbox-kernel, while it can process only one.
In such a case, expand the name of package to install, like virtualbox-kernel-4.3.4_3.10.28, so that it can differentiate between the package versions, eg, 
 slack upgrade virtualbox-kernel-4.3.4_3.10

4) Giving package path instead of package name also added to support installation of package from custom folder. For example,
 slack -B ~/builds/thermald/thermal_daemon-1.1-rc
(Without any trailing slash at the end of the path)
Here the above path is the folder which contains the source and slackbuild and related files.
